enum Suit {
  hearts
  diamonds
  clubs
  spades
}
type Card {
  value: Int!
  suit: Int!
}
type Game {
  id: ID!
  deck: [Card]
  board: [Card]
  cardsUsed: [Card]
  winner: Boolean
  ended: Boolean
}
type GameResult {
  success: Boolean!
  game: Game
  msg: String
}
type StreakResult {
  winner: Boolean!
  streak: Int!
}
input GameId {
  gameId: Int!
}

type Query {
  streaks: StreakResult
}

type Mutation {
  shuffle: GameResult
  deal(gameId: GameId): GameResult
}
